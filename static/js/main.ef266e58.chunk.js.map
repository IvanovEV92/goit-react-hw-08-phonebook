{"version":3,"sources":["component/ContactList/contactList.module.css","component/filter/filter.module.css","redux/contact/contact-action.js","redux/contact/contact-operations.js","redux/contact/contact-selectors.js","component/form/Form.js","component/ContactList/ContactList.js","component/filter/Filter.js","App.js","redux/contact/contact-reducer.js","redux/store.js","index.js","component/form/form.module.css"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","handleFormRequest","handleFormSuccess","handleFormError","delContactRequest","delContactSuccess","delContactError","changeFilter","axios","defaults","baseURL","dispatch","a","actions","get","data","newContact","post","contactId","delete","error","getFilter","state","contactList","filter","getLoading","loading","getVisibleContacts","createSelector","items","normalizedFilter","toLowerCase","item","name","includes","Form","number","handleChange","target","value","setState","handleSubmit","e","preventDefault","props","onSubmit","resetForm","this","className","styles","form","form__label","type","placeholder","title","required","onChange","form__button","Component","connect","contact","contactOperations","contacts","contactSelectors","delContact","id","style","map","contactList__item","contactList__button","onClick","contactActions","currentTarget","search","App","fetchContacts","isLoadingContacts","contactOperation","createReducer","_","payload","addContactRequest","addContactSuccess","addContactError","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contactReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ef266e58.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"contactList_contactList__3LkeL\",\"contactList__item\":\"contactList_contactList__item__ktFX7\",\"contactList__button\":\"contactList_contactList__button__1iG7K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"filter_search__1X2RS\"};","import { createAction } from '@reduxjs/toolkit';\n\n// import { v4 as uuidv4 } from 'uuid';\n\nconst fetchContactsRequest = createAction('contacts/fetchContactsRequest');\nconst fetchContactsSuccess = createAction('contacts/fetchContactsSuccess');\nconst fetchContactsError = createAction('contacts/fetchContactsError');\nconst handleFormRequest = createAction('contacts/handleFormRequest');\nconst handleFormSuccess = createAction('contacts/handleFormSuccess');\nconst handleFormError = createAction('contacts/handleFormError');\nconst delContactRequest = createAction('contacts/delContactRequest');\nconst delContactSuccess = createAction('contacts/delContactSuccess');\nconst delContactError = createAction('contacts/delContactError');\n\nconst changeFilter = createAction('contacts/changeFilter');\n\nexport default {\n\thandleFormRequest,\n\thandleFormSuccess,\n\thandleFormError,\n\tdelContactRequest,\n\tdelContactSuccess,\n\tdelContactError,\n\tfetchContactsRequest,\n\tfetchContactsSuccess,\n\tfetchContactsError,\n\tchangeFilter,\n};\n","import axios from 'axios';\nimport actions from './contact-action';\n\naxios.defaults.baseURL = 'http://localhost:3004/';\n\nconst fetchContact = () => async dispatch => {\n\tdispatch(actions.fetchContactsRequest());\n\ttry {\n\t\tconst { data } = await axios.get('/contacts');\n\t\tdispatch(actions.fetchContactsSuccess(data));\n\t} catch (error) {\n\t\tdispatch(actions.fetchContactsError(error));\n\t}\n};\n\nconst handleForm = newContact => async dispatch => {\n\tdispatch(actions.handleFormRequest());\n\ttry {\n\t\tconst { data } = await axios.post('/contacts', { ...newContact });\n\t\tdispatch(actions.handleFormSuccess(data));\n\t} catch (error) {\n\t\tdispatch(actions.handleFormError(error));\n\t}\n};\n\nconst deleteContact = contactId => async dispatch => {\n\tdispatch(actions.delContactRequest());\n\ttry {\n\t\taxios.delete(`/contacts/${contactId}`);\n\t\tdispatch(actions.delContactSuccess(contactId));\n\t} catch (error) {\n\t\tdispatch(actions.delContactError(error));\n\t}\n};\n\nexport default { fetchContact, handleForm, deleteContact };\n","import { createSelector } from '@reduxjs/toolkit';\n\nconst getLoading = state => state.contactList.loading;\n\nconst getFilter = state => state.contactList.filter;\n\nconst getContacts = state => state.contactList.items;\n\nconst getVisibleContacts = createSelector(\n\t[getContacts, getFilter],\n\t(items, filter) => {\n\t\tconst normalizedFilter = filter.toLowerCase();\n\t\treturn items.filter(item =>\n\t\t\titem.name.toLowerCase().includes(normalizedFilter),\n\t\t);\n\t},\n);\n// eslint-disable-next-line\nexport default { getLoading, getFilter, getVisibleContacts };\n","import React, { Component } from 'react';\nimport styles from './form.module.css';\nimport { connect } from 'react-redux';\nimport { contactOperations } from '../../redux/contact/';\nclass Form extends Component {\n\tstate = { name: '', number: '' };\n\n\thandleChange = ({ target }) => {\n\t\tconst { name, value } = target;\n\n\t\tthis.setState({ [name]: value });\n\t};\n\n\thandleSubmit = e => {\n\t\te.preventDefault();\n\n\t\tthis.props.onSubmit(this.state);\n\t\tthis.resetForm();\n\t};\n\tresetForm = () => {\n\t\tthis.setState({ name: '', number: '' });\n\t};\n\trender() {\n\t\tconst { name, number } = this.state;\n\t\treturn (\n\t\t\t<form className={styles.form} onSubmit={this.handleSubmit}>\n\t\t\t\t<label className={styles.form__label}>\n\t\t\t\t\tName\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\tvalue={name}\n\t\t\t\t\t\tplaceholder=\"Enter name\"\n\t\t\t\t\t\t// pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n\t\t\t\t\t\ttitle=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t/>\n\t\t\t\t</label>\n\t\t\t\t<label className={styles.form__label}>\n\t\t\t\t\tNumber\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"tel\"\n\t\t\t\t\t\tname=\"number\"\n\t\t\t\t\t\tvalue={number}\n\t\t\t\t\t\tplaceholder=\"Enter number\"\n\t\t\t\t\t\t// pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n\t\t\t\t\t\ttitle=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t/>\n\t\t\t\t</label>\n\t\t\t\t<button className={styles.form__button} type=\"submit\">\n\t\t\t\t\tAdd contact\n\t\t\t\t</button>\n\t\t\t</form>\n\t\t);\n\t}\n}\n\nconst mapDispatchToProps = dispatch => ({\n\tonSubmit: contact => dispatch(contactOperations.handleForm(contact)),\n});\nexport default connect(null, mapDispatchToProps)(Form);\n","import React from 'react';\nimport style from './contactList.module.css';\nimport { connect } from 'react-redux';\nimport { contactOperations, contactSelectors } from '../../redux/contact/';\n\nconst ContactList = ({ contacts, delContact }) => {\n\treturn (\n\t\t<ul className={style.contactList}>\n\t\t\t{contacts.map(item => (\n\t\t\t\t<li key={item.id} className={style.contactList__item}>\n\t\t\t\t\t<span>{item.name}</span>\n\t\t\t\t\t<span>{item.number}</span>\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName={style.contactList__button}\n\t\t\t\t\t\tonClick={() => delContact(item.id)}\n\t\t\t\t\t>\n\t\t\t\t\t\tX\n\t\t\t\t\t</button>\n\t\t\t\t</li>\n\t\t\t))}\n\t\t</ul>\n\t);\n};\nconst mapStateToProps = state => ({\n\tcontacts: contactSelectors.getVisibleContacts(state),\n});\nconst mapDispatchToProps = dispatch => ({\n\tdelContact: id => dispatch(contactOperations.deleteContact(id)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { contactActions, contactSelectors } from '../../redux/contact/';\n\nimport styles from './filter.module.css';\nconst Filter = ({ value, onChange }) => {\n\treturn (\n\t\t<input\n\t\t\tclassName={styles.search}\n\t\t\ttype=\"text\"\n\t\t\tvalue={value}\n\t\t\tplaceholder=\"Search\"\n\t\t\tonChange={onChange}\n\t\t/>\n\t);\n};\nconst mapStateToProps = state => ({\n\tvalue: contactSelectors.getFilter(state),\n});\nconst mapDispatchToProps = dispatch => ({\n\tonChange: e => dispatch(contactActions.changeFilter(e.currentTarget.value)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import { Component } from 'react';\n\nimport ContactForm from './component/form';\nimport ContactList from './component/ContactList';\nimport Filter from './component/filter';\nimport { connect } from 'react-redux';\nimport contactSelectors from './redux/contact/contact-selectors';\n\nimport contactOperation from './redux/contact/contact-operations';\nclass App extends Component {\n\tcomponentDidMount() {\n\t\tthis.props.fetchContacts();\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<section>\n\t\t\t\t<h1>Phonebook</h1>\n\t\t\t\t<ContactForm />\n\t\t\t\t{this.props.isLoadingContacts && <h1>Загружаем...</h1>}\n\t\t\t\t<h2>Contacts</h2>\n\t\t\t\t<Filter />\n\t\t\t\t<ContactList />\n\t\t\t</section>\n\t\t);\n\t}\n}\nconst mapStateToProps = state => {\n\tisLoadingContacts: contactSelectors.getLoading(state);\n};\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\tfetchContacts: () => dispatch(contactOperation.fetchContact()),\n\t};\n};\nexport default connect(null, mapDispatchToProps)(App);\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport { contactActions } from './';\n\nconst items = createReducer([], {\n\t[contactActions.fetchContactsSuccess]: (_, { payload }) => payload,\n\t[contactActions.handleFormSuccess]: (state, { payload }) => [\n\t\t...state,\n\t\tpayload,\n\t],\n\t[contactActions.delContactSuccess]: (state, { _, payload }) =>\n\t\tstate.filter(({ id }) => id !== payload),\n});\nconst filter = createReducer('', {\n\t[contactActions.changeFilter]: (_, { payload }) => payload,\n});\n\nconst loading = createReducer(false, {\n\t[contactActions.fetchContactsRequest]: () => true,\n\t[contactActions.fetchContactsSuccess]: () => false,\n\t[contactActions.fetchContactsError]: () => false,\n\t[contactActions.addContactRequest]: () => true,\n\t[contactActions.addContactSuccess]: () => false,\n\t[contactActions.addContactError]: () => false,\n\t[contactActions.delContactRequest]: () => true,\n\t[contactActions.delContactSuccess]: () => false,\n\t[contactActions.delContactError]: () => false,\n});\nexport default combineReducers({\n\titems,\n\tfilter,\n\tloading,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport contactReducer from './contact/contact-reducer';\nimport {\n\tFLUSH,\n\tREHYDRATE,\n\tPAUSE,\n\tPERSIST,\n\tPURGE,\n\tREGISTER,\n} from 'redux-persist';\nimport logger from 'redux-logger';\n\nconst middleware = [\n\t...getDefaultMiddleware({\n\t\tserializableCheck: {\n\t\t\tignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n\t\t},\n\t}),\n\tlogger,\n];\nconst store = configureStore({\n\treducer: {\n\t\tcontactList: contactReducer,\n\t},\n\tmiddleware,\n\tdevTools: process.env.NODE_ENV === 'development',\n});\n\n// const persistor = persistStore(store);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\n// import { PersistGate } from 'redux-persist/integration/react';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t{/* <PersistGate loading={null} persistor={store.persistor}> */}\n\t\t\t<App />\n\t\t\t{/* </PersistGate> */}\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"form_form__3zemM\",\"form__label\":\"form_form__label__3jfC0\",\"form__button\":\"form_form__button__xq39y\"};"],"sourceRoot":""}