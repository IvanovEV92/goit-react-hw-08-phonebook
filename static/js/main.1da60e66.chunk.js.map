{"version":3,"sources":["redux/contact/contact-action.js","redux/contact/contact-operations.js","redux/contact/contact-selectors.js","redux/contact/contact-reducer.js","component/Navigation.js","component/UserMenu/UserMenu.js","component/AuthNav.js","component/AppBar.js","component/PrivateRoute.js","component/PublicRoute.js","App.js","redux/store.js","index.js","redux/auth/auth-actions.js","redux/auth/auth-reducer.js","redux/auth/auth-operations.js","redux/auth/auth-selectors.js"],"names":["fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","handleFormRequest","handleFormSuccess","handleFormError","delContactRequest","delContactSuccess","delContactError","changeFilter","fetchContact","dispatch","a","actions","axios","get","data","handleForm","newContact","post","deleteContact","contactId","delete","error","getFilter","state","contactList","filter","getLoading","loading","getVisibleContacts","createSelector","items","normalizedFilter","toLowerCase","item","name","includes","createReducer","contactActions","_","payload","id","addContactRequest","addContactSuccess","addContactError","combineReducers","styles","link","display","textDecoration","padding","fontWeight","color","activeLink","connect","isAuthenticated","authSelectors","getIsAuthenticated","to","exact","style","activeStyle","container","alignItems","avatar","marginRight","mapDispatchToProps","onLogout","authOperations","logOut","getUsername","src","alt","width","type","onClick","AuthNav","header","justifyContent","borderBottom","Component","component","redirectTo","routeProps","render","props","restricted","HomeView","lazy","RegisterView","LoginView","ContactView","App","this","onGetCurretnUser","fallback","path","getCurrentUser","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","auth","persistReducer","authReducer","contactReducer","devTools","process","persistor","persistStore","ReactDOM","StrictMode","document","getElementById","registerRequest","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","initialUserState","email","user","authActions","token","setError","defaults","baseURL","headers","common","Authorization","register","credentials","response","message","logIn","getState","persistedToken","Boolean"],"mappings":"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","file":"static/js/main.1da60e66.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\n\n// import { v4 as uuidv4 } from 'uuid';\n\nconst fetchContactsRequest = createAction('contacts/fetchContactsRequest');\nconst fetchContactsSuccess = createAction('contacts/fetchContactsSuccess');\nconst fetchContactsError = createAction('contacts/fetchContactsError');\nconst handleFormRequest = createAction('contacts/handleFormRequest');\nconst handleFormSuccess = createAction('contacts/handleFormSuccess');\nconst handleFormError = createAction('contacts/handleFormError');\nconst delContactRequest = createAction('contacts/delContactRequest');\nconst delContactSuccess = createAction('contacts/delContactSuccess');\nconst delContactError = createAction('contacts/delContactError');\n\nconst changeFilter = createAction('contacts/changeFilter');\n\nexport default {\n\thandleFormRequest,\n\thandleFormSuccess,\n\thandleFormError,\n\tdelContactRequest,\n\tdelContactSuccess,\n\tdelContactError,\n\tfetchContactsRequest,\n\tfetchContactsSuccess,\n\tfetchContactsError,\n\tchangeFilter,\n};\n","import axios from 'axios';\nimport actions from './contact-action';\n\nconst fetchContact = () => async dispatch => {\n\tdispatch(actions.fetchContactsRequest());\n\ttry {\n\t\tconst { data } = await axios.get('/contacts');\n\t\tdispatch(actions.fetchContactsSuccess(data));\n\t} catch (error) {\n\t\tdispatch(actions.fetchContactsError(error));\n\t}\n};\n\nconst handleForm = newContact => async dispatch => {\n\tdispatch(actions.handleFormRequest());\n\ttry {\n\t\tconst { data } = await axios.post('/contacts', { ...newContact });\n\t\tdispatch(actions.handleFormSuccess(data));\n\t} catch (error) {\n\t\tdispatch(actions.handleFormError(error));\n\t}\n};\n\nconst deleteContact = contactId => async dispatch => {\n\tdispatch(actions.delContactRequest());\n\ttry {\n\t\taxios.delete(`/contacts/${contactId}`);\n\t\tdispatch(actions.delContactSuccess(contactId));\n\t} catch (error) {\n\t\tdispatch(actions.delContactError(error));\n\t}\n};\n\nexport default { fetchContact, handleForm, deleteContact };\n","import { createSelector } from '@reduxjs/toolkit';\n\nconst getLoading = state => state.contactList.loading;\n\nconst getFilter = state => state.contactList.filter;\n\nconst getContacts = state => state.contactList.items;\n\nconst getVisibleContacts = createSelector(\n\t[getContacts, getFilter],\n\t(items, filter) => {\n\t\tconst normalizedFilter = filter.toLowerCase();\n\t\treturn items.filter(item =>\n\t\t\titem.name.toLowerCase().includes(normalizedFilter),\n\t\t);\n\t},\n);\n// eslint-disable-next-line\nexport default { getLoading, getFilter, getVisibleContacts };\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport { contactActions } from './';\n\nconst items = createReducer([], {\n\t[contactActions.fetchContactsSuccess]: (_, { payload }) => payload,\n\t[contactActions.handleFormSuccess]: (state, { payload }) => [\n\t\t...state,\n\t\tpayload,\n\t],\n\t[contactActions.delContactSuccess]: (state, { _, payload }) =>\n\t\tstate.filter(({ id }) => id !== payload),\n});\nconst filter = createReducer('', {\n\t[contactActions.changeFilter]: (_, { payload }) => payload,\n});\n\nconst loading = createReducer(false, {\n\t[contactActions.fetchContactsRequest]: () => true,\n\t[contactActions.fetchContactsSuccess]: () => false,\n\t[contactActions.fetchContactsError]: () => false,\n\t[contactActions.addContactRequest]: () => true,\n\t[contactActions.addContactSuccess]: () => false,\n\t[contactActions.addContactError]: () => false,\n\t[contactActions.delContactRequest]: () => true,\n\t[contactActions.delContactSuccess]: () => false,\n\t[contactActions.delContactError]: () => false,\n});\nexport default combineReducers({\n\titems,\n\tfilter,\n\tloading,\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { authSelectors } from '../redux/auth';\n\nimport { NavLink } from 'react-router-dom';\n\nconst styles = {\n\tlink: {\n\t\tdisplay: 'inline-block',\n\t\ttextDecoration: 'none',\n\t\tpadding: 12,\n\t\tfontWeight: 700,\n\t\tcolor: '#2A363B',\n\t},\n\tactiveLink: {\n\t\tcolor: '#E84A5F',\n\t},\n};\n\nconst Navigation = ({ isAuthenticated }) => (\n\t<nav>\n\t\t<NavLink to=\"/\" exact style={styles.link} activeStyle={styles.activeLink}>\n\t\t\tГлавная\n\t\t</NavLink>\n\n\t\t{isAuthenticated && (\n\t\t\t<NavLink\n\t\t\t\tto=\"/contacts\"\n\t\t\t\texact\n\t\t\t\tstyle={styles.link}\n\t\t\t\tactiveStyle={styles.activeLink}\n\t\t\t>\n\t\t\t\tКонтакты\n\t\t\t</NavLink>\n\t\t)}\n\t</nav>\n);\nconst mapStateToProps = state => ({\n\tisAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(Navigation);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { authSelectors, authOperations } from '../../redux/auth';\n\nconst styles = {\n\tcontainer: {\n\t\tdisplay: 'flex',\n\t\talignItems: 'center',\n\t},\n\tavatar: {\n\t\tmarginRight: 4,\n\t},\n\tname: {\n\t\tfontWeight: 700,\n\t\tmarginRight: 12,\n\t},\n};\n\nconst UserMenu = ({ avatar, name, onLogout }) => (\n\t<div style={styles.container}>\n\t\t<img src={avatar} alt=\"\" width=\"32\" style={styles.avatar} />\n\t\t<span style={styles.name}>Welcome, {name}</span>\n\t\t<button type=\"button\" onClick={onLogout}>\n\t\t\tLogout\n\t\t</button>\n\t</div>\n);\nconst mapStateToProps = state => ({\n\tname: authSelectors.getUsername(state),\n});\n\nconst mapDispatchToProps = {\n\tonLogout: authOperations.logOut,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst styles = {\n\tlink: {\n\t\tdisplay: 'inline-block',\n\t\ttextDecoration: 'none',\n\t\tpadding: 12,\n\t\tfontWeight: 700,\n\t\tcolor: '#2A363B',\n\t},\n\tactiveLink: {\n\t\tcolor: '#E84A5F',\n\t},\n};\n\nconst AuthNav = () => (\n\t<div>\n\t\t<NavLink\n\t\t\tto=\"/register\"\n\t\t\texact\n\t\t\tstyle={styles.link}\n\t\t\tactiveStyle={styles.activeLink}\n\t\t>\n\t\t\tРегистрация\n\t\t</NavLink>\n\t\t<NavLink\n\t\t\tto=\"/login\"\n\t\t\texact\n\t\t\tstyle={styles.link}\n\t\t\tactiveStyle={styles.activeLink}\n\t\t>\n\t\t\tЛогин\n\t\t</NavLink>\n\t</div>\n);\n\nexport default AuthNav;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Navigation from './Navigation';\nimport UserMenu from './UserMenu';\nimport AuthNav from './AuthNav';\nimport { authSelectors } from '../redux/auth';\n\nconst styles = {\n\theader: {\n\t\tdisplay: 'flex',\n\t\tjustifyContent: 'space-between',\n\t\talignItems: 'center',\n\t\tborderBottom: '1px solid #2A363B',\n\t},\n};\n\nconst AppBar = ({ isAuthenticated }) => (\n\t<header style={styles.header}>\n\t\t<Navigation />\n\t\t{isAuthenticated ? <UserMenu /> : <AuthNav />}\n\t</header>\n);\n\nconst mapStateToProps = state => ({\n\tisAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(AppBar);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { authSelectors } from '../redux/auth';\n\nconst PrivateRoute = ({\n\tcomponent: Component,\n\tisAuthenticated,\n\tredirectTo,\n\t...routeProps\n}) => (\n\t<Route\n\t\t{...routeProps}\n\t\trender={props =>\n\t\t\tisAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\n\t\t}\n\t/>\n);\n\nconst mapStateToProps = state => ({\n\tisAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { authSelectors } from '../redux/auth';\n\nconst PublicRoute = ({\n\tcomponent: Component,\n\tisAuthenticated,\n\tredirectTo,\n\t...routeProps\n}) => (\n\t<Route\n\t\t{...routeProps}\n\t\trender={props =>\n\t\t\tisAuthenticated && routeProps.restricted ? (\n\t\t\t\t<Redirect to={redirectTo} />\n\t\t\t) : (\n\t\t\t\t<Component {...props} />\n\t\t\t)\n\t\t}\n\t/>\n);\n\nconst mapStateToProps = state => ({\n\tisAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(PublicRoute);\n","import React, { Component, Suspense, lazy } from 'react';\nimport { Switch } from 'react-router-dom';\n\nimport AppBar from './component/AppBar';\nimport PrivateRoute from './component/PrivateRoute';\nimport PublicRoute from './component/PublicRoute';\nimport { authOperations } from './redux/auth';\nimport { connect } from 'react-redux';\n\nconst HomeView = lazy(() => import('./views/HomeView'));\nconst RegisterView = lazy(() => import('./views/RegisterView'));\nconst LoginView = lazy(() => import('./views/LoginView'));\nconst ContactView = lazy(() => import('./views/ContactView'));\nclass App extends Component {\n\tcomponentDidMount() {\n\t\tthis.props.onGetCurretnUser();\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<AppBar />\n\t\t\t\t<Suspense fallback={<p>Загружаем...</p>}>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<PublicRoute exact path=\"/\" component={HomeView} />\n\t\t\t\t\t\t<PublicRoute\n\t\t\t\t\t\t\tpath=\"/register\"\n\t\t\t\t\t\t\trestricted\n\t\t\t\t\t\t\tredirectTo=\"/contacts\"\n\t\t\t\t\t\t\tcomponent={RegisterView}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<PublicRoute\n\t\t\t\t\t\t\tpath=\"/login\"\n\t\t\t\t\t\t\trestricted\n\t\t\t\t\t\t\tredirectTo=\"/contacts\"\n\t\t\t\t\t\t\tcomponent={LoginView}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<PrivateRoute\n\t\t\t\t\t\t\tpath=\"/contacts\"\n\t\t\t\t\t\t\tredirectTo=\"/login\"\n\t\t\t\t\t\t\tcomponent={ContactView}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Switch>\n\t\t\t\t</Suspense>\n\t\t\t</>\n\t\t);\n\t}\n}\n\nconst mapDispatchToProps = {\n\tonGetCurretnUser: authOperations.getCurrentUser,\n};\n\nexport default connect(null, mapDispatchToProps)(App);\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport { contactReducer } from './contact';\nimport { authReducer } from './auth';\nimport {\n\tpersistStore,\n\tpersistReducer,\n\tFLUSH,\n\tREHYDRATE,\n\tPAUSE,\n\tPERSIST,\n\tPURGE,\n\tREGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport logger from 'redux-logger';\n\nconst middleware = [\n\t...getDefaultMiddleware({\n\t\tserializableCheck: {\n\t\t\tignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n\t\t},\n\t}),\n\tlogger,\n];\n\nconst authPersistConfig = {\n\tkey: 'auth',\n\tstorage,\n\twhitelist: ['token'],\n};\n\nconst store = configureStore({\n\treducer: {\n\t\tauth: persistReducer(authPersistConfig, authReducer),\n\t\tcontactList: contactReducer,\n\t},\n\tmiddleware,\n\tdevTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\nexport default { store, persistor };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store.store}>\n\t\t\t<PersistGate loading={null} persistor={store.persistor}>\n\t\t\t\t<BrowserRouter>\n\t\t\t\t\t<App />\n\t\t\t\t</BrowserRouter>\n\t\t\t</PersistGate>\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById('root'),\n);\n","import { createAction } from '@reduxjs/toolkit';\n\nconst registerRequest = createAction('auth/registerRequest');\nconst registerSuccess = createAction('auth/registerSuccess');\nconst registerError = createAction('auth/registerError');\n\nconst loginRequest = createAction('auth/loginRequest');\nconst loginSuccess = createAction('auth/loginSuccess');\nconst loginError = createAction('auth/loginError');\n\nconst logoutRequest = createAction('auth/logoutRequest');\nconst logoutSuccess = createAction('auth/logoutSuccess');\nconst logoutError = createAction('auth/logoutError');\n\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\n\nexport default {\n\tregisterRequest,\n\tregisterSuccess,\n\tregisterError,\n\tlogoutRequest,\n\tlogoutSuccess,\n\tlogoutError,\n\tloginRequest,\n\tloginSuccess,\n\tloginError,\n\tgetCurrentUserRequest,\n\tgetCurrentUserSuccess,\n\tgetCurrentUserError,\n};\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport authActions from './auth-actions';\n\nconst initialUserState = { name: null, email: null };\n\nconst user = createReducer(initialUserState, {\n\t[authActions.registerSuccess]: (_, { payload }) => payload.user,\n\t[authActions.loginSuccess]: (_, { payload }) => payload.user,\n\t[authActions.logoutSuccess]: () => initialUserState,\n\t[authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\n});\n\nconst token = createReducer(null, {\n\t[authActions.registerSuccess]: (_, { payload }) => payload.token,\n\t[authActions.loginSuccess]: (_, { payload }) => payload.token,\n\t[authActions.logoutSuccess]: () => null,\n});\n\nconst setError = (_, { payload }) => payload;\n\nconst error = createReducer(null, {\n\t[authActions.registerError]: setError,\n\t[authActions.loginError]: setError,\n\t[authActions.logoutError]: setError,\n\t[authActions.getCurrentUserError]: setError,\n});\n\nexport default combineReducers({\n\tuser,\n\ttoken,\n\terror,\n});\n","import axios from 'axios';\nimport authActions from './auth-actions';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nconst token = {\n\tset(token) {\n\t\taxios.defaults.headers.common.Authorization = `Bearer ${token}`;\n\t},\n\tunset() {\n\t\taxios.defaults.headers.common.Authorization = '';\n\t},\n};\n\nconst register = credentials => async dispatch => {\n\tdispatch(authActions.registerRequest());\n\n\ttry {\n\t\tconst response = await axios.post('/users/signup', credentials);\n\n\t\ttoken.set(response.data.token);\n\t\tdispatch(authActions.registerSuccess(response.data));\n\t} catch (error) {\n\t\tdispatch(authActions.registerError(error.message));\n\t}\n};\n\nconst logIn = credentials => async dispatch => {\n\tdispatch(authActions.loginRequest());\n\n\ttry {\n\t\tconst response = await axios.post('/users/login', credentials);\n\n\t\ttoken.set(response.data.token);\n\t\tdispatch(authActions.loginSuccess(response.data));\n\t} catch (error) {\n\t\tdispatch(authActions.loginError(error.message));\n\t}\n};\n\nconst logOut = () => async dispatch => {\n\tdispatch(authActions.logoutRequest());\n\n\ttry {\n\t\tawait axios.post('/users/logout');\n\n\t\ttoken.unset();\n\t\tdispatch(authActions.logoutSuccess());\n\t} catch (error) {\n\t\tdispatch(authActions.logoutError(error.message));\n\t}\n};\n\nconst getCurrentUser = () => async (dispatch, getState) => {\n\tconst {\n\t\tauth: { token: persistedToken },\n\t} = getState();\n\n\tif (!persistedToken) {\n\t\treturn;\n\t}\n\n\ttoken.set(persistedToken);\n\tdispatch(authActions.getCurrentUserRequest());\n\n\ttry {\n\t\tconst response = await axios.get('/users/current');\n\n\t\tdispatch(authActions.getCurrentUserSuccess(response.data));\n\t} catch (error) {\n\t\tdispatch(authActions.getCurrentUserError(error.message));\n\t}\n};\n\nexport default { register, logOut, logIn, getCurrentUser };\n","const getIsAuthenticated = state => Boolean(state.auth.token);\n\nconst getUsername = state => state.auth.user.name;\n\nexport default {\n\tgetIsAuthenticated,\n\tgetUsername,\n};\n"],"sourceRoot":""}